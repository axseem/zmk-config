/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <2 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 2>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <10 9>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <25 26>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <13 2>;
        };

        copy {
            bindings = <&copy>;
            key-positions = <26 27>;
        };

        paste {
            bindings = <&paste>;
            key-positions = <27 28>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp C>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp V>;
            label = "PASTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q  &kp W  &kp F     &kp P      &kp B        &kp J  &kp L  &kp U      &kp Y    &kp SEMI  &none
&none  &kp A  &kp R  &kp S     &kp T      &kp G        &kp M  &kp N  &kp E      &kp I    &kp O     &none
&none  &kp Z  &kp X  &kp C     &kp D      &kp V        &kp K  &kp H  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LGUI  &kp SPACE  &kp LSHFT    &mo 2  &mo 1  &kp RALT
            >;
        };

        num {
            bindings = <
&none  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT     &kp INS       &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none
&none  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL    &kp CAPSLOCK  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none
&none  &kp APOS   &kp N1  &kp N2  &kp N3  &kp BSLH     &none         &none     &none      &none      &none      &none
                          &kp N0  &none   &none        &none         &none     &none
            >;
        };

        fun {
            bindings = <
&none  &kp F12  &kp F7  &kp F8      &kp F9  &bt BT_SEL 2    &none  &kp C_BRI_DN  &kp C_PLAY_PAUSE   &kp C_MUTE       &kp C_BRI_UP  &none
&none  &kp F11  &kp F4  &kp F5      &kp F6  &bt BT_SEL 1    &none  &kp C_PREV    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &none
&none  &kp F10  &kp F1  &kp F2      &kp F3  &bt BT_SEL 0    &none  &none         &none              &none            &none         &none
                        &bt BT_CLR  &none   &none           &none  &none         &none
            >;
        };
    };
};
